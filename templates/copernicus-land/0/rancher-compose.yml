version: "2"
catalog:
  name: "Copernicus - Land deployment"
  description: "Copernicus Land website."
  version: "1.0"
  uuid: "copernicus-land-0"
  questions:
  - variable: "APACHE_CONFIG_URL"
    label: "VH config url"
    description: "URL of virtual host config."
    default: "https://raw.githubusercontent.com/eea/eea.docker.copernicus/master/apache/vh-land.conf"
    type: "string"
    required: true
  - variable: "PLONE_SCALE"
    label: "Plone scale"
    description: "Scale Plone service."
    default: 4
    type: "int"
    required: true
  - variable: "ASYNC_SCALE"
    label: "Async scale"
    description: "Scale Plone async service."
    default: 1
    type: "int"
    required: true
  - variable: "HOST_LABELS"
    label: "Host affinity for services."
    description: "Comma separated list of host labels (e.g. key1=value1,key2=value2) to be used for the services. Set empty for no affinity."
    type: "string"
    required: false
    default: "land=yes"
  - variable: "HAPROXY_STATS_AUTH"
    label: "HAProxy auth"
    description: "Format as user:pass"
    default: ""
    type: "string"
    required: true
  - variable: "TZ"
    label: "Time zone"
    description: "Time zone"
    default: "Europe/Copenhagen"
    type: "string"
    required: true

services:
  haproxy:
    scale: 1
    health_check:
      port: 4242
      interval: 30000
      initializing_timeout: 60000
      unhealthy_threshold: 3
      strategy: recreate
      healthy_threshold: 2
      response_timeout: 2000
  memcached:
    scale: 1
    health_check:
      port: 11211
      interval: 2000
      unhealthy_threshold: 3
      strategy: recreate
      response_timeout: 2000
      healthy_threshold: 2
  postfix:
    scale: 1
    health_check:
      port: 25
      interval: 2000
      unhealthy_threshold: 3
      strategy: recreate
      response_timeout: 2000
      healthy_threshold: 2
  plone:
    scale: ${PLONE_SCALE}
    health_check:
      port: 8080
      interval: 5000
      initializing_timeout: 300000
      unhealthy_threshold: 3
      strategy: recreate
      response_timeout: 3000
      healthy_threshold: 2
  async:
    scale: ${ASYNC_SCALE}
    health_check:
      port: 8080
      interval: 5000
      initializing_timeout: 300000
      unhealthy_threshold: 3
      strategy: recreate
      response_timeout: 3000
      healthy_threshold: 2
  zeoserver:
    scale: 1
    health_check:
      port: 8100
      interval: 5000
      initializing_timeout: 300000
      unhealthy_threshold: 3
      strategy: recreate
      response_timeout: 3000
      healthy_threshold: 2
