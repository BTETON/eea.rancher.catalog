.catalog:
  name: "Logcentral - Elasticsearch"
  version: "2.4.4.1"
  uuid: "logcentral-elasticsearch-3"
  description: "EEA Elasticsearch cluster to be used with Logcentral app"
  questions:
    - variable: "cluster_name"
      description: "Unique name to assign to your Elasticsearch cluster."
      label: "Cluster Name"
      type: "string"
      required: true
      default: "graylog2"
    - variable: "host_labels"
      description: "Comma separated list of host labels (e.g. key1=value1, key2=value2) to be used for scheduling the services."
      label: "Schedule on hosts with following host labels"
      type: "string"
      required: true
      default: "logcentral-es=yes"
    - variable: "kopf_port"
      label: "Public Port"
      description: "Unique public port for kopf"
      type: "int"
      default: 8090
      required: true
    - variable: "backup_volume"
      label: "Backup volume"
      description: "Shared Elasticsearch backup volume. It can be a NFS mount on host, or a rancher-nfs volume. Use a dummy volume name like `elastic-backup`, if don't going to use the backup functionallity."
      type: "string"
      required: true
      default: "logcentral-elastic-backup"
    - variable: "volume_driver"
      label: "Data volume driver"
      description: "Volume driver"
      default: "rancher-ebs"
      type: "enum"
      options:
      - "rancher-ebs"
      - "rancher-nfs"
      - "local"
      required: true
    - variable: "volume_driver_opts"
      label: "Data volume driver options"
      description: |
          Specify "driver_opts" key/value pair in the format "optionName: optionValue".
          E.g. for the `rancher-ebs` driver you should specify the required 'size' option like this: "size: 1".
      type: "multiline"

elasticsearch-masters:
  scale: 2
  metadata:
    elasticsearch:
      yml:
        cluster.name: "${cluster_name}"
        node.name: "$${HOSTNAME}"
        node.data: "false"
        node.master: "true"
        network.host: "_site_"
        path.repo: "/backup"
elasticsearch-datanodes:
  scale: 2
  metadata:
    elasticsearch:
      yml:
        cluster.name: "${cluster_name}"
        node.name: "$${HOSTNAME}"
        node.data: "true"
        node.master: "false"
        http.enabled: "false"
        network.host: "_site_"
        path.repo: "/backup"
elasticsearch-clients:
  scale: 2
  metadata:
    elasticsearch:
      yml:
       cluster.name: "${cluster_name}"
       node.name: "$${HOSTNAME}"
       node.data: "false"
       node.master: "false"
       network.host: "_site_"
       path.repo: "/backup"
