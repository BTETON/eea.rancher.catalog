mongodb-data:
    image: docker.io/busybox
    volumes:
        - /data
        - /logs
    command: "/bin/true"
    labels:
        io.rancher.container.start_once: true
        io.rancher.container.hostname_override: container_name

es-data:
    image: docker.io/busybox
    volumes:
        - /data
        - /logs
    command: "/bin/true"
    labels:
       io.rancher.container.start_once: true
       io.rancher.container.hostname_override: container_name

mongodb-setup:
    image: docker.io/alpine
    volumes_from:
        - mongodb-data
    volumes:
        - ./setup/setup.sh:/setup.sh:z
    command: /setup.sh
    labels:
       io.rancher.container.start_once: true
       io.rancher.container.hostname_override: container_name

es-setup:
    image: docker.io/alpine
    volumes_from:
        - es-data
    volumes:
        - ./setup/setup.sh:/setup.sh:z
    command: /setup.sh
    labels:
       io.rancher.container.start_once: true
       io.rancher.container.hostname_override: container_name

postfix:
    restart: always
    image: eeacms/postfix:eionet
    volumes:
        - /etc/localtime:/etc/localtime:ro
#tomakevar
    env_file:
        - .postfix.secret
    labels:
       io.rancher.container.hostname_override: container_name

mongodb:
    image: docker.io/mongo:3.0.10
    restart: always
    command: "--smallfiles --quiet --logappend --logpath=/logs/mongodb/mongodb.log --dbpath=/data/mongodb"
    volumes:
        - /etc/localtime:/etc/localtime:ro
    volumes_from:
        - mongodb-data
    labels:
       io.rancher.sidekicks: mongodb-data
       io.rancher.container.hostname_override: container_name

elasticsearch:
    image: docker.io/elasticsearch:2.3.1
    restart: always
    volumes:
        - /etc/localtime:/etc/localtime:ro
    command: "elasticsearch -Des.cluster.name='graylog2' -Des.path.data=/data/elasticsearch -Des.path.logs=/logs/elasticsearch/"
#tomakevar
    env_file:
        - elastic.env
    volumes_from:
        - es-data
    labels:
       io.rancher.sidekicks: es-data
       io.rancher.container.hostname_override: container_name

graylog-master:
    restart: always
    image: docker.io/eeacms/graylog2:2.0.2
#tomakevar
    env_file:
        - .secret.env
        - graylog.env
    environment:
        - ENABLED_SERVICES=web,server
        - GRAYLOG_IS_MASTER=true
    ports:
        - "9000:9000"
        - "12900:12900"
    links:
        - "elasticsearch:elasticsearch"
        - "mongodb:mongodb"
        - "postfix:postfix"
    volumes:
        - /etc/localtime:/etc/localtime:ro
    labels:
       io.rancher.container.hostname_override: container_name

graylog-client-1:
    restart: always
    image: docker.io/eeacms/graylog2:2.0.2
#tomakevar
    env_file:
        - .secret.env
        - graylog.env
    environment:
        - GRAYLOG_IS_MASTER=false
        - ENABLED_SERVICES=server
    links:
        - "elasticsearch:elasticsearch"
        - "mongodb:mongodb"
        - "postfix:postfix"
    volumes:
        - /etc/localtime:/etc/localtime:ro
    labels:
       io.rancher.container.hostname_override: container_name

loadbalancer:
    restart: always
    image: docker.io/nginx:alpine
    ports:
        - "1514:1514/tcp"
        - "12201:12201/udp"
    volumes-from:
        - lb-config-data
    volumes:
        - ./config/nginx.balancer.conf:/etc/nginx/nginx.conf:z
        - /etc/localtime:/etc/localtime:ro
    links:
        - "graylog-master:graylogmaster"
        - "graylog-client-1:graylogclient1"
    labels:
       io.rancher.container.hostname_override: container_name

#fluentd:
#    restart: always
#    image: docker.io/eeacms/fluentd
#    links:
#        - loadbalancer
#    ports:
#        - "5140:5140/udp"
#    volumes:
#        - ./config/fluent.multinode.conf:/etc/fluent/fluent.conf:z # Configuration
#        - /etc/localtime:/etc/localtime:ro
